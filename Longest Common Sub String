import java.util.Scanner;
public class LongestCommonSubstring {
    public static String longestCommonSubstring(String text1, String text2) {
        int n = text1.length();
        int m = text2.length();
       
        int[][] dp = new int[n + 1][m + 1];
        int maxLength = 0;  // Length of the longest common substring
        int endIndex = 0;   // Index where the longest common substring ends
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                if (text1.charAt(i - 1) == text2.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                    if (dp[i][j] > maxLength) {
                        maxLength = dp[i][j];
                        endIndex = i;
                    }
                } else {
                    dp[i][j] = 0;
                }
            }
        }
       
        if (maxLength == 0) {
            return "";  // No common substring found
        } else {
            return text1.substring(endIndex - maxLength, endIndex);
        }
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
       
        System.out.print("Enter the first string: ");
        String text1 = scanner.nextLine();
       
        System.out.print("Enter the second string: ");
        String text2 = scanner.nextLine();
       
        String longestCommonSubstring = longestCommonSubstring(text1, text2);
       
        if (longestCommonSubstring.isEmpty()) {
            System.out.println("No common substring found.");
        } else {
            System.out.println("Longest Common Substring: " + longestCommonSubstring);
        }
    }
}

